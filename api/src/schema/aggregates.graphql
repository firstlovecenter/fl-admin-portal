type ComponentBussingAggregate {
  week: Int!
  attendance: Int!
}

type ComponentServiceAggregate {
  week: Int!
  attendance: Int!
  income: Float!
}

extend type Oversight {
  componentBussingAggregate(limit: Int = 6): [ComponentBussingAggregate]
  componentServiceAggregate(limit: Int = 6): [ComponentServiceAggregate]
}

extend type GatheringService {
  componentBussingAggregate(limit: Int = 6): [ComponentBussingAggregate]
  componentServiceAggregate(limit: Int = 6): [ComponentServiceAggregate]
}

extend type Stream {
  componentBussingAggregate(limit: Int = 6): [ComponentBussingAggregate]
  componentServiceAggregate(limit: Int = 6): [ComponentServiceAggregate]
}

extend type Council {
  componentBussingAggregate(limit: Int = 6): [ComponentBussingAggregate]
  componentServiceAggregate(limit: Int = 6): [ComponentServiceAggregate]
}
extend type Constituency {
  componentBussingAggregate(limit: Int = 6): [ComponentBussingAggregate]
  componentServiceAggregate(limit: Int = 6): [ComponentServiceAggregate]
}
extend type Bacenta {
  componentServiceAggregate(limit: Int = 6): [ComponentServiceAggregate]
}
