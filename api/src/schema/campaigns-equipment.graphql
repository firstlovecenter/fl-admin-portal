extend type ServiceLog {
  equipmentConstituencyRecord: [ConstituencyEquipmentRecord]
    @relationship(type: "HAS_RECORD", direction: OUT)
  equipmentCampaign: [EquipmentCampaign]
    @relationship(type: "HAS_HISTORY", direction: IN)
  equipmentBacentaRecord: [FellowshipEquipmentRecord]
    @relationship(type: "HAS_RECORD", direction: OUT)
  equipmentFellowshipRecord: [FellowshipEquipmentRecord]
    @relationship(type: "HAS_RECORD", direction: OUT)
}

interface EquipmentRecord {
  id: ID!
  created_at: DateTime!
  equipmentDate: TimeGraph!
  serviceLog: ServiceLog @relationship(type: "HAS_RECORD", direction: IN)
}

###### CAMPAIGN TYPES #######
type FellowshipEquipmentRecord implements EquipmentRecord {
  id: ID!
  created_at: DateTime!
  equipmentDate: TimeGraph!
  offeringBags: Int!
  serviceLog: ServiceLog @relationship(type: "HAS_RECORD", direction: IN)
  constituencyRecord: ConstituencyEquipmentRecord
    @relationship(type: "HAS", direction: IN)
}

type ConstituencyEquipmentRecord implements EquipmentRecord {
  id: ID!
  created_at: DateTime!
  equipmentDate: TimeGraph!
  pulpits: Int!
  serviceLog: ServiceLog @relationship(type: "HAS_RECORD", direction: IN)
  fellowshipRecords: [FellowshipEquipmentRecord]
    @relationship(type: "HAS", direction: OUT)
}

type EquipmentCampaign implements Campaign {
  id: ID!
  name: String!
    @cypher(
      statement: """
      MATCH (this)<-[:HAS_CAMPAIGN]-(church) WHERE church:Fellowship OR church:Bacenta OR church:Constituency OR church:Council OR church:Stream OR church:GatheringService
      UNWIND labels(church) AS churchLevel
      RETURN church.name+ ' ' +churchLevel + ' Equipment Campaign'
      """
    )
  type: String! @cypher(statement: "RETURN 'Equipment Campaign'")
  serviceLog: [ServiceLog] @relationship(type: "HAS_HISTORY", direction: OUT)
  fellowship: Fellowship @relationship(type: "HAS_CAMPAIGN", direction: IN)
  bacenta: Bacenta @relationship(type: "HAS_CAMPAIGN", direction: IN)
  constituency: Constituency @relationship(type: "HAS_CAMPAIGN", direction: IN)
  council: Council @relationship(type: "HAS_CAMPAIGN", direction: IN)
  stream: Stream @relationship(type: "HAS_CAMPAIGN", direction: IN)
  gatheringService: GatheringService
    @relationship(type: "HAS_CAMPAIGN", direction: IN)
  leader: Member @relationship(type: "LEADS", direction: IN)
  target: Target @relationship(type: "HAS_TARGET", direction: OUT)
}

extend type Mutation {
  CreateFellowshipEquipmentRecord(
    fellowshipID: ID!
    offeringBags: Int!
    date: Date!
  ): FellowshipEquipmentRecord
    @cypher(
      statement: """

      """
    )

  CreateEquipmentConstituencyCampaign(
    constituencyID: ID!
    leaderId: ID!
    gatheringServiceCampaignID: ID!
  ): EquipmentCampaign
    @cypher(
      statement: """

      """
    )

  CreateEquipmentStreamCampaign(
    streamID: ID!
    leaderId: ID!
    gatheringServiceCampaignID: ID!
  ): EquipmentCampaign
    @cypher(
      statement: """

      """
    )

  CreateEquipmentGatheringServiceCampaign(
    gatheringServiceId: ID!
    leaderId: ID!
    campaignTarget: Int!
  ): EquipmentCampaign
    @cypher(
      statement: """
            CREATE (gatheringServiceCampaign:EquipmentCampaign)
      SET
      gatheringServiceCampaign.id = apoc.create.uuid()
      WITH gatheringServiceCampaign
      MATCH (gatheringService:GatheringService {id:$gatheringServiceId})
      MATCH (leader:Member {id:$leaderId})
      SET
      gatheringServiceCampaign.name = gatheringService.name + ' Equipment Campaign'
          CREATE (log:ServiceLog)
            SET log.id = apoc.create.uuid(),
             log.timeStamp = datetime(),
             log.historyRecord = gatheringServiceCampaign.name +' History Begins'
      MERGE (gatheringServiceCampaign)-[:HAS_HISTORY]->(log)
      MERGE (gatheringServiceCampaign)<-[:HAS_CAMPAIGN]-(gatheringService)
      MERGE (gatheringServiceCampaign)<-[:LEADS]-(leader)
      MERGE (gatheringServiceCampaign)-[:HAS_TARGET]->(target:Target)
      ON CREATE
      SET target.percentage = $campaignTarget

      return gatheringServiceCampaign
      """
    )
}
