#Query Definitions
type Query {
  currentUser(id: ID): Member!
    @cypher(
      statement: "MATCH (member:Active:Member {auth_id: $auth.jwt.sub}) RETURN member"
    )
    @auth(rules: [{ isAuthenticated: true }])

  memberByEmail(email: String!): Member
    @cypher(
      statement: "MATCH (member:Active:Member {email:$email}) RETURN member LIMIT 1"
    )
}

type Mutation {
  MakeFellowshipIntoBacenta(fellowshipId: ID!): Bacenta!
  CreateMemberAccount(memberId: ID!): String!
}
